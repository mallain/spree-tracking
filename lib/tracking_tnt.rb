# To change this template, choose Tools | Templates
# and open the template in the editor.

class TrackingTnt

  attr_reader :file, :named_file

  @@xml_file_path_pattern = "#{SPREE_ROOT}/vendor/extensions/spree_tracking/config/tracking_tnt_pattern.xml"

  def initialize(shipment)
    # Instanciate variable
    @named_file = "MAEXPEDL.txt"

    # Define Hash to perform
    fields_hash = define_hash_fields(shipment)

    # Retrieve File Generated by Tracking Engine
    @file = TrackingEngine.new(@@xml_file_path_pattern, :fields_hash => fields_hash).file
  end

  #########################
  # GENERAL FIELDS GETTER #
  #########################

  # Define fields for a shipment
  # shipment : Represent the shipment object
  def define_hash_fields(shipment)
    # Instanciate Hash
    fields = Hash.new

    ##################
    # EDIT THIS HASH #
    ##################

    # Initialize fields Hash
    # Each key of Fields Hash MUST match XML Fields Value
    # Link Each Key Field with a function to retrieve value from ActiveRecord
    fields = {
      "shipment_saturday_or_week" => "#{retrieve_shipment_saturday_or_week(shipment)}",
      "shipment_weight" => "#{retrieve_shipment_weight(shipment)}",
      'client_id' => "#{retrieve_client_id(shipment)}",
      'number_shipment_package' => "#{retrieve_number_shipment_package(shipment)}",
      'last_name_first_name' => "#{retrieve_last_name_first_name(shipment)}",
      'address' => "#{retrieve_address(shipment)}",
      'zipcode' => "#{retrieve_zipcode(shipment)}",
      "city" => "#{retrieve_city(shipment).to_s}",
      'country_code' => "#{retrieve_country_code(shipment)}",
      'phone' => "#{retrieve_phone(shipment)}"
    }

    ##############
    #  END EDIT  #
    ##############

    fields
  end

  #################
  # FIELDS GETTER #
  #################

  # Retrieve shipment method
  # Saturday (S) or week (C)
  def retrieve_shipment_saturday_or_week(shipment)
    return 'C'
  end

  # Retrieve shipement weight
  def retrieve_shipment_weight(shipment)
    return '0.1'
  end

  # Retrieve client ID
  def retrieve_client_id(shipment)
    return shipment.order.user.id
  end

  # Number of shipment package
  def retrieve_number_shipment_package(shipment)
    return shipment.order.id
  end

  # Concate Last_name and First_name
  def retrieve_last_name_first_name(shipment)
    # Instanciate variable
    result = ''

    # Retrieve variable lastname and firstname
    lastname = shipment.address.lastname
    firstname = shipment.address.firstname

    # Concate value
    result += lastname unless lastname.nil?
    result += ' ' unless lastname.nil?
    result += firstname unless firstname.nil?

    # Return value
    result
  end

  # Retrieve User Address
  def retrieve_address(shipment)
    # Instanciate variable
    result = ''

    # Retrieve variable lastname and firstname
    address_line1 = shipment.address.address1
    address_line2 = shipment.address.address2

    # Concate value
    result += address_line1 unless address_line1.nil?
    result += ' ' unless address_line1.nil?
    result += address_line2 unless address_line2.nil?

    return result
  end

  # Retrieve Zipcode
  def retrieve_zipcode(shipment)
    return shipment.address.zipcode
  end

  # Retrieve Town
  def retrieve_city(shipment)
    return shipment.address.city
  end

  # Retrieve country code
  def retrieve_country_code(shipment)
    return shipment.address.country.iso
  end

  # Retrieve customer phone number
  def retrieve_phone(shipment)
    return shipment.address.phone
  end
end
